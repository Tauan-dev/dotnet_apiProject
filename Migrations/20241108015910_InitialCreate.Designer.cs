// <auto-generated />
using System;
using ApiProduct.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiProduct.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241108015910_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Contact", b =>
                {
                    b.Property<int?>("contactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("contactId"));

                    b.Property<int?>("idUser")
                        .HasColumnType("int");

                    b.Property<string>("number")
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("contactId");

                    b.HasIndex("userId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int?>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("orderId"));

                    b.Property<int?>("idUSer")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("userId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersorderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsproductId")
                        .HasColumnType("int");

                    b.HasKey("OrdersorderId", "ProductsproductId");

                    b.HasIndex("ProductsproductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int?>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("productId"));

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.HasKey("productId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int?>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("userId"));

                    b.Property<string>("birthdate")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Contact", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Contatcs")
                        .HasForeignKey("userId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("userId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersorderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsproductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Contatcs");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
